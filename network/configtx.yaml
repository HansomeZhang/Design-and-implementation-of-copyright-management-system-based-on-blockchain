# 定义组织机构实体
Organizations:
  - &CARUNION
    Name: CARUNION # 组织的名称
    ID: CARUNIONMSP # 组织的 MSPID
    MSPDir: crypto-config/ordererOrganizations/carunion.com/msp #组织的证书相对位置（生成的crypto-config目录)

  - &BENZ
    Name: BENZ
    ID: BENZMSP
    MSPDir: crypto-config/peerOrganizations/benz.com/msp
    AnchorPeers: # 组织锚节点的配置
      - Host: peer0.benz.com
        Port: 7051

  - &TESLA
    Name: TESLA
    ID: TESLAMSP
    MSPDir: crypto-config/peerOrganizations/tesla.com/msp
    AnchorPeers: # 组织锚节点的配置
      - Host: peer0.tesla.com
        Port: 7051

# 定义了排序服务的相关参数，这些参数将用于创建创世区块
Orderer: &OrdererDefaults
  # 排序节点类型用来指定要启用的排序节点实现，不同的实现对应不同的共识算法
  OrdererType: solo # 共识机制
  Addresses: # Orderer 的域名（用于连接）
    - orderer.carunion.com:7050
  BatchTimeout: 2s # 出块时间间隔
  BatchSize: # 用于控制每个block的信息量
    MaxMessageCount: 10 #每个区块的消息个数
    AbsoluteMaxBytes: 99 MB #每个区块最大的信息大小
    PreferredMaxBytes: 512 KB #每个区块包含的一条信息最大长度
  Organizations:

# 定义Peer组织如何与应用程序通道交互的策略
# 默认策略：所有Peer组织都将能够读取数据并将数据写入账本
Application: &ApplicationDefaults
  Organizations:

# 用来定义用于 configtxgen 工具的配置入口
# 将 Profile 参数（ TwoOrgsOrdererGenesis 或 TwoOrgsChannel ）指定为 configtxgen 工具的参数
Profiles:
  #  TwoOrgsOrdererGenesis配置文件用于创建系统通道创世块
  #  该配置文件创建一个名为SampleConsortium的联盟
  #  该联盟在configtx.yaml文件中包含两个Peer组织BENZ和TESLA
  TwoOrgsOrdererGenesis:
    Orderer:
      <<: *OrdererDefaults
      Organizations:
        - *CARUNION
    Consortiums:
      SampleConsortium:
        Organizations:
          - *BENZ
          - *TESLA
  # 使用TwoOrgsChannel配置文件创建应用程序通道
  TwoOrgsChannel:
    Consortium: SampleConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *BENZ
        - *TESLA